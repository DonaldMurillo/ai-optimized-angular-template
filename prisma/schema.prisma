// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  profile   Profile?
  files     File[]
  
  @@map("users")
}

model Profile {
  id        String   @id @default(uuid())
  firstName String?
  lastName  String?
  bio       String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("profiles")
}

model File {
  id          String   @id @default(uuid())
  filename    String
  originalName String
  mimetype    String
  size        Int
  data        Bytes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Optional: associate with user who uploaded
  uploadedById String?
  uploadedBy   User?   @relation(fields: [uploadedById], references: [id], onDelete: SetNull)
  
  @@map("files")
}
